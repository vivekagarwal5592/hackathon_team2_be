---
    - name: Ensure bash, OpenSSl, and libssl are the latest versions
      become: yes
      apt: name={{ item }} update_cache=true state=latest
      with_items:
        - bash
        - openssl
        - libssl-dev
        - libssl-doc

    - name: Install PostgreSQL
      become: yes
      apt: name={{ item }} update_cache=true state=latest
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python3-psycopg2

    - name: Ensure the PostgreSQL service is running
      service: name=postgresql state=started enabled=yes

    - name: Create postgres user
      become: yes
      become_method: sudo
      become_user: postgres
      postgresql_user: name={{ db_user }} password={{ db_password }}

    - name: Ensure database is created
      become: yes
      become_method: sudo
      become_user: postgres
      postgresql_db: name={{ db_name }}
#        encoding='UTF-8'
#        lc_collate='en_US.UTF-8'
#        lc_ctype='en_US.UTF-8'
#        template='template0'
#        state=present

    - name: Add postgres user
      become: yes
      become_method: sudo
      become_user: postgres
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        db: "{{ db_name }}"
        priv: ALL
        state: present
        role_attr_flags: SUPERUSER
        encrypted: yes

#    - name: Ensure user has access to the database
#      become: yes
#      become_method: sudo
#      become_user: postgres
#      postgresql_user: db={{ db_name }}
#        name={{ db_user }}
#        password={{ db_password }}
#        priv=ALL
#        state=present

    - name: restart postgresql
      become: yes
      become_method: sudo
      service: name=postgresql state=restarted

#    - name: Ensure user does not have unnecessary privileges
#      #      sudo_user: postgres
#      postgresql_user: name={{ db_user }}
#        role_attr_flags=NOSUPERUSER,NOCREATEDB
#        state=pr
